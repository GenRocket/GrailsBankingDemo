package com.genrocket.bank

import org.springframework.transaction.annotation.Transactional

/**
 * Generated By GenRocket 10/16/2016.
 */
@Transactional
class AccountService {
  def customerService
  def cardService

  Integer generateAccountNumber() {
    Random random = new Random();
    Integer min = 1000010000
    Integer max = 9999999999
    Boolean found = false
    Integer accountNumber

    while (!found) {
      accountNumber = random.nextInt(max - min) + min

      Account account = Account.findByAccountNumber(accountNumber)

      found = account == null
    }

    return accountNumber
  }

  Account save(User user, Branch branch, CardType cardType, AccountType accountType, CustomerLevel customerLevel) {
    Account account = new Account(
      accountNumber: generateAccountNumber(),
      branch: branch,
      accountType: accountType
    )

    account.save()

    if (!account.hasErrors()) {
      Customer customer = new Customer(
        enabled: false,
        user: user,
        account: account,
        customerLevel: customerLevel
      )

      customerService.save(customer)

      if (!customer.hasErrors()) {
        cardService.save(cardType, customer)
      }
    }

    return account
  }

  def checkOverdraftAllowed(User user, Account account) {
    Customer customer = Customer.findByUserAndAccount(user, account)

    if (customer) {
      CustomerLevel customerLevel = customer.customerLevel
      return customerLevel.overdraftAllowed
    } else {
      return false
    }
  }

  def update(Account account) {
    account.save()
  }

  def delete(Account account) {
    account.delete()
  }

}
    