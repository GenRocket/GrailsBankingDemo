package com.genrocket.bank

import grails.test.spock.IntegrationSpec

/**
 * Generated By GenRocket 10/16/2016.
 */
class CardServiceConstraintSpec extends IntegrationSpec {
  def cardTestDataService
  def cardService

  void "test cardNumber for Null"() {
    given:

    cardTestDataService.loadData()
    Card card = Card.first()
    card.cardNumber = null

    when:

    cardService.update(card);

    then:

    card.errors.getFieldError("cardNumber").code == "nullable"

  }

  void "test cardType for Null"() {
    given:

    cardTestDataService.loadData()
    Card card = Card.first()
    card.cardType = null

    when:

    cardService.update(card);

    then:

    card.errors.getFieldError("cardType").code == "nullable"

  }

  void "test customer for Null"() {
    given:

    cardTestDataService.loadData()
    Card card = Card.first()
    card.customer = null

    when:

    cardService.update(card);

    then:

    card.errors.getFieldError("customer").code == "nullable"

  }

  void "test dateExpired for Null"() {
    given:

    cardTestDataService.loadData()
    Card card = Card.first()
    card.dateExpired = null

    when:

    cardService.update(card);

    then:

    card.errors.getFieldError("dateExpired").code == "nullable"

  }

  void "test dateIssued for Null"() {
    given:

    cardTestDataService.loadData()
    Card card = Card.first()
    card.dateIssued = null

    when:

    cardService.update(card);

    then:

    card.errors.getFieldError("dateIssued").code == "nullable"

  }

  void "test enabled for Null"() {
    given:

    cardTestDataService.loadData()
    Card card = Card.first()
    card.enabled = null

    when:

    cardService.update(card);

    then:

    card.errors.getFieldError("enabled").code == "nullable"

  }

  void "test nameOnCard for Null"() {
    given:

    cardTestDataService.loadData()
    Card card = Card.first()
    card.nameOnCard = null

    when:

    cardService.update(card);

    then:

    card.errors.getFieldError("nameOnCard").code == "nullable"

  }

  void "test securityCode for Null"() {
    given:

    cardTestDataService.loadData()
    Card card = Card.first()
    card.securityCode = null

    when:

    cardService.update(card);

    then:

    card.errors.getFieldError("securityCode").code == "nullable"

  }

}
    